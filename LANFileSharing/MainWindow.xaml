<Window x:Class="LANFileSharing.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LANFileSharing"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        mc:Ignorable="d"
        Title="LAN File Sharer" Height="700" Width="950" MinWidth="800" MinHeight="600"
        Background="{DynamicResource AppBackgroundBrush}"
        WindowStartupLocation="CenterScreen"
        Closing="Window_Closing"
        AllowDrop="True" DragEnter="Window_DragEnter" Drop="Window_Drop"
        StateChanged="Window_StateChanged">

    <Window.Resources>
        <!-- Modern Button Style -->
        <Style TargetType="Button" x:Key="ModernButton">
            <Setter Property="Background" Value="{DynamicResource PrimaryButtonBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryButtonForegroundBrush}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource PrimaryButtonHoverBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{DynamicResource DisabledButtonBackgroundBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Secondary Button Style -->
        <Style TargetType="Button" x:Key="SecondaryButton" BasedOn="{StaticResource ModernButton}">
            <Setter Property="Background" Value="{DynamicResource SecondaryButtonBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource SecondaryButtonForegroundBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="4" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource SecondaryButtonHoverBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Stop Button Style -->
        <Style TargetType="Button" x:Key="StopButton" BasedOn="{StaticResource ModernButton}">
            <Setter Property="Background" Value="{DynamicResource StopButtonBackgroundBrush}"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{DynamicResource StopButtonHoverBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <!-- Root grid definitions MUST be first -->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="280"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="200"/>
        </Grid.RowDefinitions>

        <!-- System Tray Icon (child content comes after definitions) -->
        <tb:TaskbarIcon x:Name="TrayIcon"
                        IconSource="/assets/Icon.ico" 
                        ToolTipText="LAN File Sharer"
                        TrayMouseDoubleClick="TrayIcon_TrayMouseDoubleClick"
                        Visibility="Collapsed">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Show" Click="ShowMenuItem_Click"/>
                    <MenuItem Header="Theme">
                        <MenuItem x:Name="AutoThemeMenuItem" Header="Auto (System)" Click="ThemeMenuItem_Click" Tag="Auto"/>
                        <MenuItem x:Name="LightThemeMenuItem" Header="Light" Click="ThemeMenuItem_Click" Tag="LightTheme"/>
                        <MenuItem x:Name="DarkThemeMenuItem" Header="Dark" Click="ThemeMenuItem_Click" Tag="DarkTheme"/>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="Exit" Click="ExitMenuItem_Click"/>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>

        <!-- Header -->
        <Border Grid.ColumnSpan="2" Grid.Row="0" 
                Background="{DynamicResource PrimaryBackgroundBrush}" Padding="20" 
                BorderBrush="{DynamicResource BorderBrush}" BorderThickness="0,0,0,1">
            <Grid>
                <!-- Inner grid definitions first -->
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0">
                    <TextBlock Text="LAN File Sharer" FontSize="24" FontWeight="SemiBold" Foreground="{DynamicResource PrimaryTextBrush}"/>
                    <TextBlock x:Name="IpAddressText" Text="Your IP Address: Loading..." FontSize="13" Foreground="{DynamicResource SecondaryTextBrush}" Margin="0,4,0,0"/>
                </StackPanel>

                <Button Grid.Column="1"
                        x:Name="SettingsButton"
                        Content="Settings"
                        Style="{StaticResource SecondaryButton}"
                        VerticalAlignment="Center"
                        Click="SettingsButton_Click"/>
            </Grid>
        </Border>

        <!-- Left Panel: Discovery -->
        <Border Grid.Column="0" Grid.Row="1" 
                Background="{DynamicResource SecondaryBackgroundBrush}" BorderBrush="{DynamicResource BorderBrush}" 
                BorderThickness="0,0,1,0" Padding="15">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <StackPanel Orientation="Horizontal" Margin="0,0,0,15">
                    <TextBlock Text="Available Devices" FontSize="16" FontWeight="SemiBold" VerticalAlignment="Center" Foreground="{DynamicResource PrimaryTextBrush}"/>
                    <Button x:Name="DiscoverButton" Click="DiscoverButton_Click" Style="{StaticResource SecondaryButton}" Padding="8,5" Margin="10,0,0,0" Content="Refresh"/>
                </StackPanel>

                <ListView x:Name="DiscoveredPeersList"
                          Grid.Row="1"
                          SelectionChanged="DiscoveredPeersList_SelectionChanged"
                          BorderThickness="0"
                          Background="Transparent">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListViewItem">
                                        <Border x:Name="Bd"
                                                BorderBrush="Transparent"
                                                BorderThickness="1"
                                                Background="{TemplateBinding Background}"
                                                Padding="10"
                                                CornerRadius="4"
                                                Margin="0,2">
                                            <ContentPresenter/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="true">
                                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ListSelectedBackgroundBrush}"/>
                                                <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource ListSelectedBorderBrush}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>

                    <ListView.View>
                        <GridView>
                            <GridView.ColumnHeaderContainerStyle>
                                <Style TargetType="GridViewColumnHeader">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </Style>
                            </GridView.ColumnHeaderContainerStyle>
                            <GridViewColumn>
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <StackPanel>
                                            <TextBlock Text="{Binding HostName}" FontWeight="SemiBold" Foreground="{DynamicResource PrimaryTextBrush}"/>
                                            <TextBlock Text="{Binding IpAddress}" Foreground="{DynamicResource SecondaryTextBrush}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>
            </Grid>
        </Border>

        <!-- Right Panel: Send Area -->
        <Border Grid.Column="1" Grid.Row="1" Background="{DynamicResource PrimaryBackgroundBrush}" Padding="25">
            <StackPanel>
                <TextBlock Text="Send Content" FontSize="20" FontWeight="SemiBold" Foreground="{DynamicResource PrimaryTextBrush}" Margin="0,0,0,10"/>

                <TextBlock Text="1. Select a device from the list on the left" Margin="0,0,0,10" Foreground="{DynamicResource MutedTextBrush}"/>
                <TextBox x:Name="TargetIpTextBox" IsReadOnly="True" Background="{DynamicResource TertiaryBackgroundBrush}" Padding="8" BorderThickness="1" BorderBrush="{DynamicResource BorderBrush}" Text="No device selected" Foreground="{DynamicResource PrimaryTextBrush}"/>

                <TextBlock Text="2. Choose what to send" Margin="0,20,0,10" Foreground="{DynamicResource MutedTextBrush}"/>
                <TabControl x:Name="SendTabControl">
                    <TabItem Header="Files / Folders">
                        <StackPanel Margin="0,15,0,0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="BrowseFilesButton" Content="Browse Files..." Style="{StaticResource SecondaryButton}" Click="BrowseFilesButton_Click"/>
                                <Button x:Name="BrowseFolderButton" Content="Browse Folder..." Style="{StaticResource SecondaryButton}" Click="BrowseFolderButton_Click" Margin="5,0,0,0" Grid.Column="1"/>
                                <Border Grid.Column="2" Background="{DynamicResource TertiaryBackgroundBrush}" Margin="10,0,0,0" CornerRadius="4" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1">
                                    <TextBlock x:Name="FilePathText" Text="No content selected (or drag &amp; drop here)" VerticalAlignment="Center" Margin="10,0" 
                                               Foreground="{DynamicResource SecondaryTextBrush}" TextTrimming="CharacterEllipsis"/>
                                </Border>
                            </Grid>
                            <Button x:Name="SendButton" Content="Send" Style="{StaticResource ModernButton}" Click="SendButton_Click" IsEnabled="False" Margin="0,20,0,0" HorizontalAlignment="Left"/>
                        </StackPanel>
                    </TabItem>
                    <TabItem Header="Text / URL">
                        <StackPanel Margin="0,15,0,0">
                            <TextBox x:Name="TextToSendBox" Height="100" TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" Padding="5" 
                                     Background="{DynamicResource TertiaryBackgroundBrush}" Foreground="{DynamicResource PrimaryTextBrush}" 
                                     BorderBrush="{DynamicResource BorderBrush}"/>
                            <Button x:Name="SendTextButton" Content="Send Text" Style="{StaticResource ModernButton}" Click="SendTextButton_Click" Margin="0,10,0,0" HorizontalAlignment="Left"/>
                        </StackPanel>
                    </TabItem>
                </TabControl>
            </StackPanel>
        </Border>

        <!-- Splitter between middle area and bottom logs -->
        <GridSplitter Grid.Row="1"
                      Grid.ColumnSpan="2"
                      Height="5"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Bottom"
                      Background="Transparent"/>

        <!-- Bottom Panel: Transfers and Status Log -->
        <TabControl Grid.ColumnSpan="2" Grid.Row="2">
            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <TextBlock Text="Transfers" Foreground="{DynamicResource PrimaryTextBrush}"/>
                        <Button x:Name="ClearCompletedButton"
                                Content="Clear Completed"
                                Style="{StaticResource SecondaryButton}"
                                Padding="5,2"
                                FontSize="10"
                                Margin="10,0,0,0"
                                Click="ClearCompletedButton_Click"/>
                    </StackPanel>
                </TabItem.Header>

                <ListView x:Name="TransfersList">
                    <!-- The ContextMenu is now here, directly on the ListView -->
                    <ListView.ContextMenu>
                        <!-- 
                        The DataContext is bound to the currently selected item in the ListView.
                        This allows the MenuItems inside to bind to properties of the TransferProgress object.
                        -->
                        <ContextMenu DataContext="{Binding PlacementTarget.SelectedItem, RelativeSource={RelativeSource Self}}">
                            <ContextMenu.Style>
                                <Style TargetType="ContextMenu">
                                    <!-- The menu is disabled by default -->
                                    <Setter Property="IsEnabled" Value="False" />
                                    <Style.Triggers>
                                        <!-- It only becomes enabled if the selected item is a completed, received transfer -->
                                        <DataTrigger Binding="{Binding IsLink}" Value="True">
                                            <Setter Property="IsEnabled" Value="True" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContextMenu.Style>
                            <MenuItem Header="Open File" Click="OpenFile_Click" IsEnabled="{Binding IsFile}"/>
                            <MenuItem Header="Open Containing Folder" Click="OpenContainingFolder_Click"/>
                        </ContextMenu>
                    </ListView.ContextMenu>

                    <!-- The ItemContainerStyle no longer contains the ContextMenu -->
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem" />
                    </ListView.ItemContainerStyle>

                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="File Name" Width="250">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <!-- Click wired here; enabled only when IsLink == true -->
                                        <TextBlock Text="{Binding FileName}"
                                                   MouseLeftButtonUp="FileName_MouseLeftButtonUp">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="IsHitTestVisible" Value="False"/>
                                                    <Setter Property="Foreground" 
                                                            Value="{DynamicResource PrimaryTextBrush}"/>
                                                    <Setter Property="TextDecorations" Value="{x:Null}"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsLink}" Value="True">
                                                            <Setter Property="IsHitTestVisible" Value="True"/>
                                                            <Setter Property="Foreground" Value="{DynamicResource LinkTextBrush}"/>
                                                            <Setter Property="TextDecorations" Value="Underline"/>
                                                            <Setter Property="Cursor" Value="Hand"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Header="Direction" Width="80" DisplayMemberBinding="{Binding Direction}"/>
                            <GridViewColumn Header="Status" Width="120" DisplayMemberBinding="{Binding Status}"/>

                            <GridViewColumn Header="Progress" Width="200">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <ProgressBar Value="{Binding Progress}" Maximum="100" Height="18" Width="200"/>
                                            <TextBlock Text="{Binding Progress, StringFormat={}{0:0}%}"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"
                                                       Foreground="{DynamicResource PrimaryButtonForegroundBrush}"
                                                       FontSize="12"/>
                                        </Grid>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>

                            <GridViewColumn Header="Throughput" Width="120" DisplayMemberBinding="{Binding Throughput}"/>

                            <GridViewColumn Header="Actions" Width="100">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="Stop"
                                                Style="{StaticResource StopButton}"
                                                Click="StopTransferButton_Click"
                                                IsEnabled="{Binding IsInProgress}"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>
            </TabItem>

            <TabItem Header="Status Log">
                <ListBox x:Name="StatusLog" BorderThickness="0" Background="{DynamicResource TextLogBackgroundBrush}" FontFamily="Consolas" FontSize="12" Foreground="{DynamicResource SecondaryTextBrush}"/>
            </TabItem>
        </TabControl>
    </Grid>
</Window>